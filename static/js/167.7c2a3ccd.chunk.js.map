{"version":3,"file":"static/js/167.7c2a3ccd.chunk.js","mappings":"2OAEaA,E,QAAOC,QAAOC,GAAEC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,0L,8BCoC7B,MA9BA,WACE,IAAQC,GAAOC,EAAAA,EAAAA,MAAPD,GACRE,GAAwBC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA7BI,EAAIF,EAAA,GAAEG,EAAOH,EAAA,GACpBI,GAA8BL,EAAAA,EAAAA,WAAS,GAAKM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAArCE,EAAOD,EAAA,GAAEE,EAAUF,EAAA,GAc1B,OAZAG,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,GAAM,eAAgB,GAAI,GAAIb,GAC3Bc,MAAK,SAAAC,GACJR,EAAQQ,EAAKT,MACbK,GAAW,EACb,IACCK,OAAM,SAAAC,GACLC,EAAAA,GAAMD,MAAM,wBAADE,OAAyBF,EAAMG,UAC1CT,GAAW,EACb,GACJ,GAAG,CAACX,IAEAU,GACKW,EAAAA,EAAAA,KAACC,EAAAA,EAAM,KAIdD,EAAAA,EAAAA,KAAC1B,EAAI,CAAA4B,SACFjB,EAAKkB,KAAI,SAAAC,GAAK,OACbJ,EAAAA,EAAAA,KAAA,MAAAE,SAAoBE,EAAMC,MAAjBD,EAAMzB,GAAqB,KAI5C,C,2ECjCM2B,EAAW,+BAGXC,EAAiB,CACrBC,QAHc,oCAMI,SAAAC,IAyBnB,OAzBmBA,GAAAC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAApB,SAAAC,EAAqBC,EAAUC,EAAQC,EAAMC,GAAQ,IAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAV,EAAAA,EAAAA,KAAAW,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAgBlD,OAfKP,EAAY,CAChBQ,SAAU,sBACVC,aAAc,gBACdC,aAAa,UAAD9B,OAAYmB,GACxBY,aAAa,UAAD/B,OAAYmB,EAAQ,YAChCa,aAAa,UAADhC,OAAYmB,EAAQ,aAG5BE,EAAG,GAAArB,OAAMQ,GAAQR,OAAGoB,EAAUJ,IAC9BM,EAAU,CACdW,cAAYC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACPzB,GACCU,EAAW,CAAC,EAAI,CAAED,KAAAA,IAClBD,EAAS,CAAEkB,MAAOlB,EAAQC,KAAAA,GAAS,CAAC,IAE3CO,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAGwBS,EAAAA,GAAGC,IAAIhB,EAAKC,GAASgB,OAAO,KAAD,EAApC,OAARf,EAAQE,EAAAc,KAAAd,EAAAe,OAAA,SACPjB,GAAQ,QAEsC,MAFtCE,EAAAC,KAAA,GAAAD,EAAAgB,GAAAhB,EAAA,SAEf1B,EAAAA,GAAMD,MAAM,wBAADE,OAAyByB,EAAAgB,GAAMxC,UACpC,IAAIyC,MAAM,uBAAD1C,OAAwByB,EAAAgB,GAAMxC,UAAW,KAAD,oBAAAwB,EAAAkB,OAAA,GAAA5B,EAAA,oBAE1D6B,MAAA,KAAAC,UAAA,CAED,IA7BE,SAEkBC,EAAAC,EAAAC,EAAAC,GAAA,OAAAtC,EAAAiC,MAAC,KAADC,UAAA,C","sources":["components/Cast/Cast.styled.js","components/Cast/Cast.jsx","services/api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const List = styled.ul`\n  grid-row: 5 / 6;\n  grid-column: 1 / 4;\n  color: #3b5998;\n  column-count: 6;\n  column-gap: 25px;\n  column-rule: 1px solid #dfe3ee;\n\n  li {\n    line-height: 1.2;\n  }\n`;\n\nexport default List;\n","import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { toast } from 'react-toastify';\n\nimport { List } from './Cast.styled';\nimport fetch from '../../services/api';\nimport Loader from '../Loader/Loader';\n\nfunction Cast() {\n  const { id } = useParams();\n  const [cast, setCast] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    fetch('movieCredits', '', '', id)\n      .then(data => {\n        setCast(data.cast);\n        setLoading(false);\n      })\n      .catch(error => {\n        toast.error(`Error fetching data: ${error.message}`);\n        setLoading(false);\n      });\n  }, [id]);\n\n  if (loading) {\n    return <Loader />;\n  }\n\n  return (\n    <List>\n      {cast.map(actor => (\n        <li key={actor.id}>{actor.name}</li>\n      ))}\n    </List>\n  );\n}\n\nexport default Cast;\n","import ky from 'ky';\nimport { toast } from 'react-toastify';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'd1c21e798be8e69642bc9e5fdadcfaf6';\n\nconst DEFAULT_PARAMS = {\n  api_key: API_KEY\n};\n\nasync function fetch(endpoint, search, page, selected) {\n  const ENDPOINTS = {\n    trending: '/trending/movie/day',\n    searchMovies: '/search/movie',\n    movieDetails: `/movie/${selected}`,\n    movieCredits: `/movie/${selected}/credits`,\n    movieReviews: `/movie/${selected}/reviews`\n  };\n\n  const url = `${BASE_URL}${ENDPOINTS[endpoint]}`;\n  const options = {\n    searchParams: {\n      ...DEFAULT_PARAMS,\n      ...(selected ? {} : { page }),\n      ...(search ? { query: search, page } : {})\n    }\n  };\n\n  try {\n    const response = await ky.get(url, options).json();\n    return response;\n  } catch (error) {\n    toast.error(`Error fetching data: ${error.message}`);\n    throw new Error(`API request failed: ${error.message}`);\n  }\n}\n\nexport default fetch;\n"],"names":["List","styled","ul","_templateObject","_taggedTemplateLiteral","id","useParams","_useState","useState","_useState2","_slicedToArray","cast","setCast","_useState3","_useState4","loading","setLoading","useEffect","fetch","then","data","catch","error","toast","concat","message","_jsx","Loader","children","map","actor","name","BASE_URL","DEFAULT_PARAMS","api_key","_fetch","_asyncToGenerator","_regeneratorRuntime","mark","_callee","endpoint","search","page","selected","ENDPOINTS","url","options","response","wrap","_context","prev","next","trending","searchMovies","movieDetails","movieCredits","movieReviews","searchParams","_objectSpread","query","ky","get","json","sent","abrupt","t0","Error","stop","apply","arguments","_x","_x2","_x3","_x4"],"sourceRoot":""}
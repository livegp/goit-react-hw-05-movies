{"version":3,"file":"static/js/713.6256b99d.chunk.js","mappings":"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","sources":["components/GalleryList/GalleryItem/GalleryItem.styled.js","components/GalleryList/GalleryItem/GalleryItem.jsx","components/GalleryList/GalleryList.styled.js","components/LoadBtn/LoadBtn.styled.js","components/LoadBtn/LoadBtn.jsx","components/GalleryList/GalleryList.jsx","components/Loader/Loader.styled.js","components/Loader/Loader.jsx","pages/Movies.jsx","services/fetch.js"],"sourcesContent":["import styled from 'styled-components';\n\nconst Container = styled.li`\n  border-radius: 2px;\n  box-shadow:\n    0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14),\n    0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n\n  img {\n    width: 100%;\n    height: 100%;\n    object-fit: cover;\n    transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n    &:hover {\n      transform: scale(1.03);\n      cursor: pointer;\n    }\n  }\n`;\n\nexport default Container;\n","import PropTypes from 'prop-types';\nimport { Link, useLocation } from 'react-router-dom';\n\nimport Container from './GalleryItem.styled';\n\nconst defaultImg =\n  'https://ireland.apollo.olxcdn.com/v1/files/0iq0gb9ppip8-UA/image;s=1000x700';\n\nfunction GalleryItem({ post }) {\n  const { id, poster_path: poster, title } = post;\n  const location = useLocation();\n\n  const POSTER_URL = 'https://image.tmdb.org/t/p/w500';\n  const url = poster ? `${POSTER_URL}${poster}` : defaultImg;\n\n  return (\n    <Container>\n      <Link to={`/movies/${id}`} state={{ from: location }}>\n        <img src={url} width={250} alt={title} role=\"presentation\" />\n      </Link>\n    </Container>\n  );\n}\n\nGalleryItem.propTypes = {\n  post: PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    poster_path: PropTypes.string,\n    title: PropTypes.string.isRequired\n  }).isRequired\n};\n\nexport default GalleryItem;\n","import styled from 'styled-components';\n\nexport const Container = styled.ul`\n  display: grid;\n  max-width: calc(100vw - 48px);\n  grid-template-columns: repeat(auto-fill, minmax(273px, 1fr));\n  grid-gap: 16px;\n  margin-top: 0;\n  margin-bottom: 0;\n  padding: 0;\n  list-style: none;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nexport const Title = styled.h1`\n  color: #8b9dc3;\n  font-size: 20px;\n  font-weight: bold;\n  margin-bottom: 25px;\n`;\n","import styled from 'styled-components';\n\nconst Btn = styled.button`\n  display: flex;\n  margin: 25px auto 0;\n  padding: 8px 16px;\n  border-radius: 4px;\n  background-color: #3b5998;\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  text-align: center;\n  color: #dfe3ee;\n  border: 0;\n  text-decoration: none;\n  cursor: pointer;\n  font-family: inherit;\n  font-size: 18px;\n  line-height: 24px;\n  font-style: normal;\n  font-weight: 500;\n  max-width: 180px;\n  box-shadow:\n    0px 3px 1px -2px rgba(0, 0, 0, 0.2),\n    0px 2px 2px 0px rgba(0, 0, 0, 0.14),\n    0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n\n  &:hover,\n  &:focus {\n    background-color: #dfe3ee;\n    color: #3b5998;\n  }\n`;\n\nexport default Btn;\n","import PropTypes from 'prop-types';\n\nimport Btn from './LoadBtn.styled';\n\nfunction LoadBtn({ onLoadMore }) {\n  return <Btn onClick={onLoadMore}>Load more</Btn>;\n}\n\nLoadBtn.propTypes = {\n  onLoadMore: PropTypes.func.isRequired\n};\n\nexport default LoadBtn;\n","import PropTypes from 'prop-types';\n\nimport GalleryItem from './GalleryItem/GalleryItem';\nimport { Container, Title } from './GalleryList.styled';\nimport LoadBtn from '../LoadBtn/LoadBtn';\nimport Loader from '../Loader/Loader';\n\nfunction GalleryList({ results, title, loading, onLoadMore, total }) {\n  return (\n    results && (\n      <>\n        <Title>{title}</Title>\n        <Container>\n          {results.map(post => (\n            <GalleryItem key={post.id} post={post} />\n          ))}\n        </Container>\n        {loading && <Loader />}\n        {!loading && results.length < total && (\n          <LoadBtn onLoadMore={onLoadMore} />\n        )}\n      </>\n    )\n  );\n}\n\nGalleryList.propTypes = {\n  results: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      poster_path: PropTypes.string,\n      title: PropTypes.string.isRequired\n    }).isRequired\n  ).isRequired,\n  title: PropTypes.string.isRequired,\n  loading: PropTypes.bool.isRequired,\n  onLoadMore: PropTypes.func.isRequired,\n  total: PropTypes.number.isRequired\n};\n\nexport default GalleryList;\n","import styled from 'styled-components';\n\nconst Container = styled.div`\n  display: flex;\n  justify-content: center;\n  margin-top: 25px;\n`;\n\nexport default Container;\n","import { Bars } from 'react-loader-spinner';\n\nimport Container from './Loader.styled';\n\nfunction Loader() {\n  return (\n    <Container>\n      <Bars\n        height=\"40\"\n        width=\"40\"\n        color=\"#3b5998\"\n        ariaLabel=\"bars-loading\"\n        wrapperStyle={{}}\n        wrapperClass=\"\"\n        visible\n      />\n    </Container>\n  );\n}\n\nexport default Loader;\n","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { toast } from 'react-toastify';\n\nimport GalleryList from '../components/GalleryList/GalleryList';\nimport fetch from '../services/fetch';\n\nfunction Movies() {\n  const [results, setResults] = useState([]);\n  const [page, setPage] = useState(1);\n  const [total, setTotal] = useState(0);\n  const [loading, setLoading] = useState(false);\n  const [searchQuery, setSearchQuery] = useState(null);\n  const [searchParams] = useSearchParams();\n\n  const title =\n    searchQuery !== null\n      ? `You searched for \"${searchQuery}\"`\n      : 'Enter a query to search';\n\n  useEffect(() => {\n    const query = searchParams.get('query');\n    if (query !== null) {\n      setSearchQuery(prevQuery => (prevQuery !== query ? query : prevQuery));\n    }\n  }, [searchParams]);\n\n  useEffect(() => {\n    if (searchQuery !== null) {\n      fetchData('searchMovies', searchQuery, page, '');\n    }\n  }, [searchQuery, page]); // eslint-disable-line\n\n  const fetchData = (endpoint, searchIn, pageNumber) => {\n    setLoading(true);\n\n    fetch(endpoint, searchIn, pageNumber, '')\n      .then(newData => {\n        setTotal(newData.total_results);\n        const newResults =\n          pageNumber === 1 ? newData.results : [...results, ...newData.results];\n        setResults(newResults);\n        setLoading(false);\n      })\n      .catch(error => {\n        toast.error(`Error fetching data: ${error.message}`);\n        setLoading(false);\n      });\n  };\n\n  const handleLoadMore = () => {\n    setPage(prevPage => prevPage + 1);\n  };\n\n  return (\n    <GalleryList\n      results={results}\n      title={title}\n      loading={loading}\n      onLoadMore={handleLoadMore}\n      total={total}\n    />\n  );\n}\n\nexport default Movies;\n","import ky from 'ky';\nimport { toast } from 'react-toastify';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'd1c21e798be8e69642bc9e5fdadcfaf6';\n\nconst DEFAULT_PARAMS = {\n  api_key: API_KEY\n};\n\nasync function fetch(endpoint, search, page, selected) {\n  const ENDPOINTS = {\n    trending: '/trending/movie/day',\n    searchMovies: '/search/movie',\n    movieDetails: `/movie/${selected}`,\n    movieCredits: `/movie/${selected}/credits`,\n    movieReviews: `/movie/${selected}/reviews`\n  };\n\n  const url = `${BASE_URL}${ENDPOINTS[endpoint]}`;\n  const options = {\n    searchParams: {\n      ...DEFAULT_PARAMS,\n      ...(selected ? {} : { page }),\n      ...(search ? { query: search, page } : {})\n    }\n  };\n\n  try {\n    const response = await ky.get(url, options).json();\n    return response;\n  } catch (error) {\n    toast.error(`Error fetching data: ${error.message}`);\n    throw new Error(`API request failed: ${error.message}`);\n  }\n}\n\nexport default fetch;\n"],"names":["styled","li","_templateObject","_taggedTemplateLiteral","_ref","post","id","poster","poster_path","title","location","useLocation","url","concat","_jsx","Container","children","Link","to","state","from","src","width","alt","role","ul","Title","h1","_templateObject2","button","onLoadMore","Btn","onClick","results","loading","total","_jsxs","_Fragment","map","GalleryItem","Loader","length","LoadBtn","div","Bars","height","color","ariaLabel","wrapperStyle","wrapperClass","visible","_useState","useState","_useState2","_slicedToArray","setResults","_useState3","_useState4","page","setPage","_useState5","_useState6","setTotal","_useState7","_useState8","setLoading","_useState9","_useState10","searchQuery","setSearchQuery","_useSearchParams","useSearchParams","searchParams","useEffect","query","get","prevQuery","fetchData","endpoint","searchIn","pageNumber","fetch","then","newData","total_results","newResults","_toConsumableArray","catch","error","toast","message","GalleryList","prevPage","BASE_URL","DEFAULT_PARAMS","api_key","_fetch","_asyncToGenerator","_regeneratorRuntime","mark","_callee","search","selected","ENDPOINTS","options","response","wrap","_context","prev","next","trending","searchMovies","movieDetails","movieCredits","movieReviews","_objectSpread","ky","json","sent","abrupt","t0","Error","stop","apply","arguments","_x","_x2","_x3","_x4"],"sourceRoot":""}